ggplot(mpg) +
geom_point(aes(x=drv, y = cyl))
ggplot(mpg) +
geom_point(aes(x=drv, y = cyl))
ggplot(mpg) +
geom_smooth(aes(x=displ, y = hwy))
gplot(mpg) +
geom_smooth(aes(x=displ, y = hwy, group = drv))
ggplot(mpg) +
geom_smooth(aes(x=displ, y = hwy, group = drv))
ggplot(mpg) +
geom_smooth(aes(x=displ, y = hwy, color = drv))
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue") +
geom_point() +
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue") +
geom_point()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, group = drv) +
geom_point()
head(mtcars)
head(mtcars)
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, group = cyl) +
geom_point()
gplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(group = cyl)) +
geom_point()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(group = cyl)) +
geom_point()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(group = cyl)) +
geom_point(aes(color = cyl))
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(linetype = cyl)) +
geom_point(aes(color = cyl))
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(linetype = am)) +
geom_point(aes(color = am))
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(linetype = gear)) +
geom_point(aes(color = gear))
?stat_summary
ggplot(data = diamond) +
stat_summary(
mapping = aex(x =cut, y=depth),
fun.ymin = min,
fun.ymx = max, fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aex(x =cut, y=depth),
fun.ymin = min,
fun.ymx = max, fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x =cut, y=depth),
fun.ymin = min,
fun.ymx = max, fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x =cut, y=depth),
fun.ymin = min,
fun.ymax = max, fun.y = median
)
?geom_pointrange
ggplot(data = diamonds) +
geom_pointrange()
ggplot(data = diamonds) +
geom_pointrange(  mapping = aes(x =cut, y=depth),
ymin = min,
ymax = max, fun.y = median)
ggplot(data = diamonds) +
geom_pointrange(  mapping = aes(x =cut, y=depth),
ymin = min,
ymax = max)
?geom_pointrange
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, y=depth),
ymin = min,
ymax = max)
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, y=depth, ymin = lower, ymax = upper)
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, y=depth, ymin = lower, ymax = upper))
ggplot(data = diamonds, aes(x =cut, y=depth)) +
geom_pointrange( ymin = min, ymax = max)
?stat_smooth
?geom_col
?geom_pointrange
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, ymin = min (depth), ymax = max(depth)))
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, y = depth, ymin = min (depth), ymax = max(depth)))
?geom_jitter
?geom_count
ggplot(mpg, aes(cty, hwy)) +
geom_point()
ggplot(mpg, aes(cty, hwy)) +
geom_count()
?geom_boxplot()
ggplot(mpg, aes(cty, hwy)) +
geom_boxplot()
head(mpg)
ggplot(mpg, aes(cty, displ)) +
geom_boxplot()
ggplot(mpg, aes(cty, displ)) +
geom_boxplot(group = 1)
ggplot(mpg, aes(cty, displ)) +
geom_boxplot(aes(group = 1))
gplot(mpg, aes(cty, hwy)) +
geom_boxplot()
gplot(mpg, aes(cty, hwy)) +
geom_boxplot()
ggplot(mpg, aes(cty, hwy)) +
geom_boxplot()
ggplot(mpg, aes(class, hwy)) +
geom_boxplot()
ggplot(mpg, aes(class, hwy)) +
geom_boxplot() +
coord_flip()
?labs
?coord_quickmap
ggplot(mpg, aes(class)) +
geom_bar(fill = hwy)
ggplot(data = diamonds) +
geom_bar(aes(x=cut, fill=cut)), width =1)
ggplot(data = diamonds) +
geom_bar(aes(x=cut, fill=cut)), width =1)
ggplot(data = diamonds) +
geom_bar(
aes(x=cut, fill=cut), width =1)
b <- ggplot(data = diamonds) +
geom_bar(
aes(x=cut, fill=cut), width =1)
b +coord_flip()
b + coord_polar()
?coord_fixed
ggplot(data = mpg, aes( x = city, y = hwy)) +
geom_point() +
geom_abline()
ggplot(data = mpg, aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
ggplot(data = mpg, aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
this_is_megan <- 55
libary("tidyverse")
library("tidyverse")
ggplot(mpg) +
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy))
filter(mpg, cyl =8)
library(nycflights13)
library(tidyverse)
library(tidyverse)
library("nycflights13")
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
library(tidyverse)
delayed_arrival <- (flights, arr_delay >= 120)
delayed_arrival <- filter(flights, arr_delay >= 120)
(delayed_arrival <- filter(flights, arr_delay >= 120))
houston_flights <- filter(flights, dest == HOU| dest == IAH)
houston_flights <- filter(flights, dest == "HOU"| dest == "IAH")
united_flights <- filters(flights, carrier %in% c("United", "American", "Delta"))
united_flights <- filter(flights, carrier %in% c("United", "American", "Delta"))
summer_flights <- filter(flights, month == c(7,8,9))
summer_flights <- filter(flights, month%in% c(7,8,9))
summer_flights
delayed_flights <- filter(flights, dep_delay >= 60 & arr_time - sched_arr_time >= 30)
?between
delated_flights <- between(flights, dep_time = 2000, dep_time = 2200)
delated_flights <- filter(flights, between(dep_time, 2000, 2200))
missed_order <- arrange(flights, is.na)
missed_order <- arrange(flights, is.na(arr.time))
missed_order <- arrange(flights, is.na(arr_time))
head(missed_order)
missed_order <- arrange(flights, desc(is.na(arr_time)))
head(missed_order)
arrange(flights, desc(dep_delay))
?one_of
select(flights, dep_time:arr_delay)
select(flights, arr_delay, arr_delay)
select(flights, contains("TIME"))
mysql -h analytics-store.eqiad.wmnet -A
Sys.setenv("http_proxy" = "http://webproxy.eqiad.wmnet:8080")
Sys.setenv("https_proxy" = "http://webproxy.eqiad.wmnet:8080")
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
install.packages("RMySQL")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
eval ssh-agent
ssh stat 6
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1005.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1005.eqiad.wmnet -L 3307:analytics-slave.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
install.packages("wmf")
devtools::install_git('https://gerrit.wikimedia.org/r/wikimedia/discovery/wmf')
install.packages("devtools", repos = c(CRAN = "https://cran.rstudio.com/"))
install.packages("devtools", repos = c(CRAN = "https://cran.rstudio.com/"))
devtools::install_git("https://gerrit.wikimedia.org/r/wikimedia/discovery/wmf", build_vignettes = TRUE)
install.packages("devtools", repos = c(CRAN = "https://cran.rstudio.com/"))
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
install.packages("devtools", repos = c(CRAN = "https://cran.rstudio.com/"))
devtools::install_git("https://gerrit.wikimedia.org/r/wikimedia/discovery/wmf", build_vignettes = TRUE)
message("Using SSH tunnel & connection to Analytics-Store...")
boy_by_mediatype <- wmf::mysql_read(query, "commonswiki", con = con)
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
message("Create an auto-closing SSH tunnel in the backgroud")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
query <- "
SELECT LEFT(img_timestamp, 8) AS yr_month_day, user_group, COUNT(*) AS n_files
FROM (
-- Get active bots
SELECT ug_user AS user_id, ug_group AS user_group
FROM user_groups
WHERE ug_group = 'bot'
UNION
-- Get inactive bots
SELECT ufg_user AS user_id, ufg_group AS user_group
FROM user_former_groups
WHERE ufg_group = 'bot'
UNION
-- Get user ids with bot categories in their user pages
SELECT user.user_id, 'bot' AS user_group
FROM user INNER JOIN (
-- all user page names with bot category
SELECT REPLACE(page.page_title, '_', ' ') AS user_name
FROM page INNER JOIN (
-- page ids with bot categories
SELECT DISTINCT cl_from AS page_id
FROM categorylinks
WHERE cl_to REGEXP '_(bot_flag|bots)(_|$)'
AND cl_type = 'page'
) AS bot_cat ON page.page_id=bot_cat.page_id
WHERE page_namespace = 2
) AS bot_name ON user.user_name=bot_name.user_name
) AS bots RIGHT JOIN image ON bots.user_id = image.img_user
WHERE LEFT(img_timestamp, 4)
BETWEEN 2010 AND 2012
GROUP BY LEFT(img_timestamp, 8), user_group;
"
message("Using SSH tunnel & connection to Analytics-Store...")
bot_by_month <- wmf::mysql_read(query, "commonswiki", con = con)
message("Closing connection...")
wmf::mysql_close(con)
save(bot_by_month, file = "data/bot_by_2010_2012.RData")
load("bot_by_2010_2012.RData")
message("Create an auto-closing SSH tunnel in the backgroud")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
setwd("~/Code/SDoC-Baseline-Metrics-Redux/T185365")
load("bot_by_2010_2012.RData")
load("data/bot_by_month.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month = zoo::as.yearmon(yr_month, "%Y%m"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month, user_group) %>%
group_by(user_group) %>%
mutate(total_files = cumsum(n_files)) %>%
group_by(yr_month) %>%
mutate(proportion = total_files / sum(total_files))
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = zoo::as.yearmon(yr_month, "%Y%m"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(total_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = total_files / sum(total_files))
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = zoo::as.yearmon(yr_month_day, "%Y%m"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(total_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = total_files / sum(total_files))
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = zoo::as.yearmon(yr_month_day, "%Y%m"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(total_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = total_files / sum(total_files))
head(bot_by_month)
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = zoo::as.yearmon(yr_month_day, "%Y%m"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(total_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = total_files / sum(total_files))
tail(bot_by_month)
bot_by_month %>%
ggplot(aes(x=year_month_day, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_yearmon(breaks = seq(min(bot_by_month$year_month), max(bot_by_month$year_month), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of files", title = "File contributions on Wikimedia Commons by users and bots between 2010 and 2012") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
bot_by_month %>%
ggplot(aes(x=year_month_day, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_yearmon(breaks = seq(min(bot_by_month$year_month_day), max(bot_by_month$year_month_day), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of files", title = "File contributions on Wikimedia Commons by users and bots between 2010 and 2012") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
#find cumulative sum for bots and users.
users_bots_total <- bot_by_month %>%
group_by(user_group) %>%
transmute(total_files = sum(n_files)) %>%
unique()
#format table
knitr::kable(users_bots_total)
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = zoo::as.yearmon(yr_month_day, "%Y%m"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(cumulative_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = cumulative_files / sum(total_files))
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = zoo::as.yearmon(yr_month_day, "%Y%m"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(cumulative_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = cumulative_files / sum(cumulative_files))
tail(bot_by_month)
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = zoo::as.yearmon(yr_month_day, "%Y%m%d"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(cumulative_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = cumulative_files / sum(cumulative_files))
tail(bot_by_month)
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = zoo::as.Date(as.yearmon(yr_month_day), frac = 1),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(cumulative_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = cumulative_files / sum(cumulative_files))
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = as.Date(zoo::as.yearmon(yr_month_day), frac = 1),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(cumulative_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = cumulative_files / sum(cumulative_files))
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = yr_month_day,
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(cumulative_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = cumulative_files / sum(cumulative_files))
tail(bot_by_month)
bot_by_month %>%
ggplot(aes(x=year_month_day, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_yearmon(breaks = seq(min(bot_by_month$year_month_day), max(bot_by_month$year_month_day), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of files", title = "File contributions on Wikimedia Commons by users and bots between 2010 and 2012") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
bot_by_month %>%
ggplot(aes(x=year_month_day, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_continuous(breaks = seq(min(bot_by_month$year_month_day), max(bot_by_month$year_month_day), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of files", title = "File contributions on Wikimedia Commons by users and bots between 2010 and 2012") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
bot_by_month %>%
ggplot(aes(x=year_month_day, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(bot_by_month$year_month_day), max(bot_by_month$year_month_day), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of files", title = "File contributions on Wikimedia Commons by users and bots between 2010 and 2012") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
bot_by_month %>%
ggplot(aes(x=year_month_day, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
scale_x_date(breaks = seq(min(bot_by_month$year_month_day), max(bot_by_month$year_month_day), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of files", title = "File contributions on Wikimedia Commons by users and bots between 2010 and 2012") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
bot_by_month %>%
ggplot(aes(x=year_month_day, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(bot_by_month$year_month_day), max(bot_by_month$year_month_day), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of files", title = "File contributions on Wikimedia Commons by users and bots between 2010 and 2012") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
load("data/bot_by_2010_2012.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month_day = yr_month_day,
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month_day, user_group) %>%
group_by(user_group) %>%
mutate(cumulative_files = cumsum(n_files)) %>%
group_by(yr_month_day) %>%
mutate(proportion = cumulative_files / sum(cumulative_files))
tail(bot_by_month)
bot_by_month %>%
ggplot(aes(x=year_month_day, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(bot_by_month$year_month_day), max(bot_by_month$year_month_day), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of files", title = "File contributions on Wikimedia Commons by users and bots between 2010 and 2012") +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
