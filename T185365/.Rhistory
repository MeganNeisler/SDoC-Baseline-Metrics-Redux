labs(x="Mile Marker", y="Time") + scale_fill_brewer(palette="Accent")
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity", alpha = 0.4) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_brewer(palette="RdYIGn")
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity", alpha = 0.4) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_brewer(palette="Dark2")
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity", alpha = 0.4) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "blue", "green", "yellow", "purple"))
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "blue", "green", "yellow", "purple"))
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity", alpha =0.5) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity", alpha =0.3) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_point(aes(fill = factor(Name)),position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity", alpha = 0.5) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot2(data = mpg)
ggplot(data = mpg)
library(ggplot2)
ggplot(data=mpg)
summary(mtcars)
dim(mtcars)
ggplot(mpg, aes(hwy, cyl))
ggplot(mpg) +
geom_point(aes(hwy, cyl))
ggplot(mpg, aes(hwy, cyl))
ggplot(mpg, aes(hwy, cyl)) +
geom_point()
ggplot(mpg, aes(class, drv)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(color = factor(Name)),position = "identity", alpha = 0.5) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
library(ggplot2)
library(ggplot2)
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(color = factor(Name)),position = "identity", alpha = 0.5) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
library(ggplot2)
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(color = factor(Name)),position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
library(ggplot2)
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(alpha = factor(Name)),position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
library(ggplot2)
ggplot(boston_df_top5, aes(x=Marker, y = Time)) +
geom_col(aes(fill = factor(Name)),position = "identity", alpha =0.5) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot(boston_df_top5) +
geom_point(aes(x=Marker, y = Time, fill = factor(Name)),position = "identity", alpha =0.5) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time") + scale_fill_manual(breaks = c("Desisa, Lelisa", "Hayle, Lemi Berhanu", "Korir, Wesley", "Lonyangata, Paul", "Tsegay, Yemane Adhane"),
values=c("red", "yellow", "green", "blue", "purple"))
ggplot(boston_df_top5) +
geom_point(aes(x=Marker, y = Time, fill = factor(Name)),position = "identity", alpha =0.5) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
ggplot(boston_df_top5) +
geom_point(aes(x=Marker, y = Time, color= Name), alpha =0.5) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
ggplot(boston_df_top5) +
geom_point(aes(x=Marker, y = Time, color= Name) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
ggplot(boston_df_top5) +
library(ggplot2)
ggplot(boston_df_top5) +
geom_point(mapping = aes(x=Marker, y = Time, color= Name)) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
library(ggplot2)
ggplot(boston_df_top5) +
geom_point(mapping = aes(x=Marker, y = Time, color= Name), position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
ggplot(boston_df_top5) +
geom_point(mapping = aes(x=Marker, y = Time, stroke= Name), position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
ggplot(boston_df_top5) +
geom_point(mapping = aes(x=Marker, y = Time, color= Name), position = "identity") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
ggplot(boston_df_top5) +
geom_point(mapping = aes(x=Marker, y = Time, color= Name)) +
facet_wrap(~ name, nrow = 2)
ggplot(boston_df_top5) +
geom_point(mapping = aes(x=Marker, y = Time, color= Name)) +
facet_wrap(~ Name, nrow = 2)
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
library(ggplot2)
ggplot(boston_df_top5) +
geom_point(mapping = aes(x=Marker, y = Time, color= Name)) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
ggplot(boston_df_top5) +
geom_point(mapping = aes(x=Marker, y = Time, color= Name), position = "dodge") +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
ggplot(boston_df_top5) +
geom_jitter(mapping = aes(x=Marker, y = Time, color= Name)) +
labs(title="Boston Marathon Top 5 Finisher Time Comparision") +
labs(x="Mile Marker", y="Time")
head(mtcars)
ggplot(mpg) +
geom_point(aes(x=displ, y= hwy)) +
facet_wrap(~mpg, nrow= 2)
ggplot(mpg) +
geom_point(aes(x=displ, y= mpg)) +
facet_wrap(~ qsec, nrow= 2)
ggplot(mpg) +
geom_point(aes(x=displ, y= mpg)) +
facet_wrap(~ cyl, nrow= 2)
ggplot(mpg) +
geom_point(aes(x=drv, y = cyl)
ggplot(mpg) +
geom_point(aes(x=drv, y = cyl))
ggplot(mpg) +
geom_point(aes(x=drv, y = cyl))
ggplot(mpg) +
geom_smooth(aes(x=displ, y = hwy))
gplot(mpg) +
geom_smooth(aes(x=displ, y = hwy, group = drv))
ggplot(mpg) +
geom_smooth(aes(x=displ, y = hwy, group = drv))
ggplot(mpg) +
geom_smooth(aes(x=displ, y = hwy, color = drv))
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue") +
geom_point() +
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue") +
geom_point()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, group = drv) +
geom_point()
head(mtcars)
head(mtcars)
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, group = cyl) +
geom_point()
gplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(group = cyl)) +
geom_point()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(group = cyl)) +
geom_point()
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(group = cyl)) +
geom_point(aes(color = cyl))
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(linetype = cyl)) +
geom_point(aes(color = cyl))
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(linetype = am)) +
geom_point(aes(color = am))
ggplot(mpg, aes(x=displ, y = hwy)) +
geom_smooth(color = "blue", se = FALSE, aes(linetype = gear)) +
geom_point(aes(color = gear))
?stat_summary
ggplot(data = diamond) +
stat_summary(
mapping = aex(x =cut, y=depth),
fun.ymin = min,
fun.ymx = max, fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aex(x =cut, y=depth),
fun.ymin = min,
fun.ymx = max, fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x =cut, y=depth),
fun.ymin = min,
fun.ymx = max, fun.y = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x =cut, y=depth),
fun.ymin = min,
fun.ymax = max, fun.y = median
)
?geom_pointrange
ggplot(data = diamonds) +
geom_pointrange()
ggplot(data = diamonds) +
geom_pointrange(  mapping = aes(x =cut, y=depth),
ymin = min,
ymax = max, fun.y = median)
ggplot(data = diamonds) +
geom_pointrange(  mapping = aes(x =cut, y=depth),
ymin = min,
ymax = max)
?geom_pointrange
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, y=depth),
ymin = min,
ymax = max)
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, y=depth, ymin = lower, ymax = upper)
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, y=depth, ymin = lower, ymax = upper))
ggplot(data = diamonds, aes(x =cut, y=depth)) +
geom_pointrange( ymin = min, ymax = max)
?stat_smooth
?geom_col
?geom_pointrange
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, ymin = min (depth), ymax = max(depth)))
ggplot(data = diamonds) +
geom_pointrange(aes(x =cut, y = depth, ymin = min (depth), ymax = max(depth)))
?geom_jitter
?geom_count
ggplot(mpg, aes(cty, hwy)) +
geom_point()
ggplot(mpg, aes(cty, hwy)) +
geom_count()
?geom_boxplot()
ggplot(mpg, aes(cty, hwy)) +
geom_boxplot()
head(mpg)
ggplot(mpg, aes(cty, displ)) +
geom_boxplot()
ggplot(mpg, aes(cty, displ)) +
geom_boxplot(group = 1)
ggplot(mpg, aes(cty, displ)) +
geom_boxplot(aes(group = 1))
gplot(mpg, aes(cty, hwy)) +
geom_boxplot()
gplot(mpg, aes(cty, hwy)) +
geom_boxplot()
ggplot(mpg, aes(cty, hwy)) +
geom_boxplot()
ggplot(mpg, aes(class, hwy)) +
geom_boxplot()
ggplot(mpg, aes(class, hwy)) +
geom_boxplot() +
coord_flip()
?labs
?coord_quickmap
ggplot(mpg, aes(class)) +
geom_bar(fill = hwy)
ggplot(data = diamonds) +
geom_bar(aes(x=cut, fill=cut)), width =1)
ggplot(data = diamonds) +
geom_bar(aes(x=cut, fill=cut)), width =1)
ggplot(data = diamonds) +
geom_bar(
aes(x=cut, fill=cut), width =1)
b <- ggplot(data = diamonds) +
geom_bar(
aes(x=cut, fill=cut), width =1)
b +coord_flip()
b + coord_polar()
?coord_fixed
ggplot(data = mpg, aes( x = city, y = hwy)) +
geom_point() +
geom_abline()
ggplot(data = mpg, aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
ggplot(data = mpg, aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
this_is_megan <- 55
libary("tidyverse")
library("tidyverse")
ggplot(mpg) +
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy))
filter(mpg, cyl =8)
library(nycflights13)
library(tidyverse)
library(tidyverse)
library("nycflights13")
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
library(tidyverse)
delayed_arrival <- (flights, arr_delay >= 120)
delayed_arrival <- filter(flights, arr_delay >= 120)
(delayed_arrival <- filter(flights, arr_delay >= 120))
houston_flights <- filter(flights, dest == HOU| dest == IAH)
houston_flights <- filter(flights, dest == "HOU"| dest == "IAH")
united_flights <- filters(flights, carrier %in% c("United", "American", "Delta"))
united_flights <- filter(flights, carrier %in% c("United", "American", "Delta"))
summer_flights <- filter(flights, month == c(7,8,9))
summer_flights <- filter(flights, month%in% c(7,8,9))
summer_flights
delayed_flights <- filter(flights, dep_delay >= 60 & arr_time - sched_arr_time >= 30)
?between
delated_flights <- between(flights, dep_time = 2000, dep_time = 2200)
delated_flights <- filter(flights, between(dep_time, 2000, 2200))
missed_order <- arrange(flights, is.na)
missed_order <- arrange(flights, is.na(arr.time))
missed_order <- arrange(flights, is.na(arr_time))
head(missed_order)
missed_order <- arrange(flights, desc(is.na(arr_time)))
head(missed_order)
arrange(flights, desc(dep_delay))
?one_of
select(flights, dep_time:arr_delay)
select(flights, arr_delay, arr_delay)
select(flights, contains("TIME"))
mysql -h analytics-store.eqiad.wmnet -A
Sys.setenv("http_proxy" = "http://webproxy.eqiad.wmnet:8080")
Sys.setenv("https_proxy" = "http://webproxy.eqiad.wmnet:8080")
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
install.packages("RMySQL")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
eval ssh-agent
ssh stat 6
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1005.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1005.eqiad.wmnet -L 3307:analytics-slave.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
install.packages("wmf")
devtools::install_git('https://gerrit.wikimedia.org/r/wikimedia/discovery/wmf')
install.packages("devtools", repos = c(CRAN = "https://cran.rstudio.com/"))
install.packages("devtools", repos = c(CRAN = "https://cran.rstudio.com/"))
devtools::install_git("https://gerrit.wikimedia.org/r/wikimedia/discovery/wmf", build_vignettes = TRUE)
install.packages("devtools", repos = c(CRAN = "https://cran.rstudio.com/"))
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
install.packages("devtools", repos = c(CRAN = "https://cran.rstudio.com/"))
devtools::install_git("https://gerrit.wikimedia.org/r/wikimedia/discovery/wmf", build_vignettes = TRUE)
message("Using SSH tunnel & connection to Analytics-Store...")
boy_by_mediatype <- wmf::mysql_read(query, "commonswiki", con = con)
setwd("~/Code/SDoC-Baseline-Metrics-Redux/T185365")
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
load("data/bot_by_month.RData")
tail(bot_by_month)
bot_by_month %>%
filter(yr_month != 201802) %>%
#filter out last month since query was run at the beginning of February.
ggplot(aes(x=year_month, y=n_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_yearmon(breaks = seq(min(bot_by_month$year_month), max(bot_by_month$year_month), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of new files", title = "Total number of newly uploaded files on Wikimedia Commons by users and bots") +
theme_minimal(base_size = 10) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
knitr::opts_chunk$set(echo = TRUE)
set.seed(0)
library(tidyverse)
message("Create an auto-closing SSH tunnel in the backgroud")
system("ssh -f -o ExitOnForwardFailure=yes stat1006.eqiad.wmnet -L 3307:analytics-store.eqiad.wmnet:3306 sleep 10")
library(RMySQL)
con <- dbConnect(MySQL(), host = "127.0.0.1", group = "client", dbname = "commonswiki", port = 3307)
load("data/bot_by_month.RData")
bot_by_month <- bot_by_month %>%
mutate(year_month = zoo::as.yearmon(yr_month, "%Y%m"),
user_group = if_else(is.na(user_group), "user", user_group)) %>%
arrange(year_month, user_group) %>%
group_by(user_group) %>%
mutate(total_files = cumsum(n_files)) %>%
group_by(yr_month) %>%
mutate(proportion = total_files / sum(total_files))
library("polloi")
bot_by_month %>%
ggplot(aes(x=year_month, y=total_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_yearmon(breaks = seq(min(bot_by_month$year_month), max(bot_by_month$year_month), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Cumulative sum of files", title = "Cumulative sum of file contributions on Wikimedia Commons by users and bots") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
bot_by_month %>%
ggplot(aes(x=year_month, y=proportion, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_yearmon(breaks = seq(min(bot_by_month$year_month), max(bot_by_month$year_month), by = 1)) +
scale_y_continuous(labels = scales::percent) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Proportion of files (Cumulative)", title = "Proportion of files contributions on Wikimedia Commons by bots and users") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
bot_by_month %>%
filter(yr_month != 201802) %>%
#filter out last month since query was run at the beginning of February.
ggplot(aes(x=year_month, y=n_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_yearmon(breaks = seq(min(bot_by_month$year_month), max(bot_by_month$year_month), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of new files", title = "Total number of newly uploaded files on Wikimedia Commons by users and bots") +
theme_minimal(base_size = 10) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
setwd("~/Code/SDoC-Baseline-Metrics-Redux/T185365")
month_plot <- bot_by_month %>%
filter(yr_month != 201802) %>%
#filter out last month since query was run at the beginning of February.
ggplot(aes(x=year_month, y=n_files, group=user_group, color=user_group)) +
geom_line(size = 1) +
zoo::scale_x_yearmon(breaks = seq(min(bot_by_month$year_month), max(bot_by_month$year_month), by = 1)) +
scale_y_continuous(labels = polloi::compress) +
scale_color_brewer("User Group", palette = "Set2") +
labs(x = "Month", y = "Number of new files", title = "Total number of newly uploaded files on Wikimedia Commons by users and bots") +
theme_minimal(base_size = 10) +
theme(legend.position = "bottom", strip.placement = "outside", axis.text.x = element_text(angle = 90))
ggsave("bot_by_month_nfiles.png", month_plot)
